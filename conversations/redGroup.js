const { msg } = require('./allMessages')
const { getLastMessage, genT } = require('../utils/utils')

exports.red1 = async (ctx) => {
    await getLastMessage(ctx)
    // '–¢–µ–±–µ —Ç—É—Ä–±—É—î —â–æ—Å—å —ñ–Ω—à–µ?
    await ctx.reply(await genT(msg.red1, ctx), {
        reply_markup: {
            inline_keyboard: [
                [{text: "–¢–∏—Ü—å!", callback_data: "red2/red1"}]
            ]
        }
    });
}

exports.red2 = async (ctx) => {
    await getLastMessage(ctx)
    // "–ú–∞—î—à –¥—É–º–∫–∏ –ø—Ä–æ —Å–∞–º–æ–≥—É–±—Å—Ç–≤–æ —á–∏ —à–∫–æ–¥—É —Å–æ–±—ñ?",
    await ctx.reply(await genT(msg.red2, ctx), {
        reply_markup: {
            inline_keyboard: [
                [{text: "–¢–∞–∫", callback_data: "red5/red2"}],
                [{text: "–ù—ñ", callback_data: "red6/red2"}]
            ]
        }
    });
}

exports.red3 = async (ctx) => {
    await getLastMessage(ctx)
    await ctx.reply(await genT(msg.red3, ctx), {
        parse_mode: "HTML",
        disable_web_page_preview: true,
        reply_markup: {
            inline_keyboard: [
                [{text: "–¢–∏—Ü—å", callback_data: "red4/red3"}]
            ]
        }
    });
}

exports.red4 = async (ctx) => {
    await getLastMessage(ctx)

    await ctx.reply(await genT(msg.red4, ctx), {
        reply_markup: {
            inline_keyboard: [
                [{text: "–¢–∏—Ü—å!", callback_data: "restartBot/red4"}], // ToDo: green link
            ]
        }
    });
}

exports.red5 = async (ctx) => {
    await getLastMessage(ctx)
    // "–¢–µ—Ä–º—ñ–Ω–æ–≤–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É–π 7333"
    await ctx.reply(await genT(msg.red5, ctx), {
        reply_markup: {
            inline_keyboard: [
                [{text: "–¢–∞–∫", callback_data: "red3/red5"}],
                [{text: "–ù—ñ", callback_data: "red7/red5"}],
            ]
        }
    });
}

exports.red6 = async (ctx) => {
    await getLastMessage(ctx)
    // "–¶–µ –¥—É–∂–µ –¥–æ–±—Ä–µ. –¢–∏ - –Ω–∞–π–¥–æ—Ä–æ–∂—á–µ, —â–æ —É —Ç–µ–±–µ —î."
    await ctx.reply(await genT(msg.red6, ctx), {
        reply_markup: {
            inline_keyboard: [
                [{text: "–°–∫–∞–∂–∏ –º–µ–Ω—ñ —â–æ—Å—å —Ö–æ—Ä–æ—à–µ", callback_data: "green23/red6"}],
            ]
        }
    });
}

exports.red7 = async (ctx) => {
    await getLastMessage(ctx)
    // –Ü –≤—Å–µ –∂, —è –Ω–∞–ø–æ–ª—è–≥–∞—Ç–∏–º—É. –ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É üëá
    await ctx.reply(await genT(msg.red7, ctx), {
        reply_markup: {
            inline_keyboard: [
                [{text: "–¢–∏—Ü—å!", callback_data: "green23/red7"}],
            ]
        }
    });
}