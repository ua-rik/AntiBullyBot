const { msg } = require('../conversations/allMessages')
const { getUserGender } = require('../db/stateManager');
const logError = require("../utils/logError");

const getLastMessage = async (ctx) => {
    const lastMessageId = ctx.callbackQuery?.data.split('/')[1] || null

    const lastMessage = msg[lastMessageId]
    const genderReadyLastMessage = await genT(lastMessage, ctx)
    try {
        if (genderReadyLastMessage) {
            await ctx.editMessageText(genderReadyLastMessage,
                {
                    parse_mode: "HTML",
                    disable_web_page_preview: true,
                });
        }
    } catch (e) {
        logError(e, "üì£ editing last message")
        return null;
    }
};

// –æ–±—Ä–æ–±–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø–µ—Ä–µ–¥ –≤—Å—Ç–∞–≤–∫–æ—é
const genT = async (message, ctx) => {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –≥–µ–Ω–¥–µ—Ä–Ω–∏—Ö —Ç–µ–≥—ñ–≤ —É —Ç–µ–∫—Å—Ç—ñ
    if (/{.*?\|.*?}/.test(message)) {
        // –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
        const gender = await getUserGender(ctx.from.id);
        // –ó–∞–º—ñ–Ω–∞ –≥–µ–Ω–¥–µ—Ä–Ω–∏—Ö —Ç–µ–≥—ñ–≤ –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ —Ñ–æ—Ä–º–∏
        return replaceGenderSpecificText(message, gender);
    } else {
        // –Ø–∫—â–æ –≥–µ–Ω–¥–µ—Ä–Ω–∏—Ö —Ç–µ–≥—ñ–≤ –Ω–µ–º–∞—î, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ç–µ–∫—Å—Ç –±–µ–∑ –∑–º—ñ–Ω
        return message;
        }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–º—ñ–Ω–∏ –≥–µ–Ω–¥–µ—Ä–Ω–∏—Ö —Ç–µ–≥—ñ–≤ —É —Ç–µ–∫—Å—Ç—ñ
function replaceGenderSpecificText(text, gender) {
    return text.replace(/{(.*?)\|(.*?)}/g, (match, maleForm, femaleForm) => {
        return gender === 'female' ? femaleForm : maleForm;
    });
}

function formatTimestamp(timestamp) {
    const date = new Date(timestamp);

    const year = date.getFullYear().toString().slice(-2); // –û—Å—Ç–∞–Ω–Ω—ñ –¥–≤–∞ —Å–∏–º–≤–æ–ª–∏ —Ä–æ–∫—É
    const month = String(date.getMonth() + 1).padStart(2, '0'); // –ú—ñ—Å—è—Ü—å –∑ –ª—ñ–¥–∏—Ä—É—é—á–∏–º –Ω—É–ª–µ–º
    const day = String(date.getDate()).padStart(2, '0'); // –î–µ–Ω—å –∑ –ª—ñ–¥–∏—Ä—É—é—á–∏–º –Ω—É–ª–µ–º

    const hours = String(date.getHours()).padStart(2, '0'); // –ì–æ–¥–∏–Ω–∏ –∑ –ª—ñ–¥–∏—Ä—É—é—á–∏–º –Ω—É–ª–µ–º
    const minutes = String(date.getMinutes()).padStart(2, '0'); // –•–≤–∏–ª–∏–Ω–∏ –∑ –ª—ñ–¥–∏—Ä—É—é—á–∏–º –Ω—É–ª–µ–º
    const seconds = String(date.getSeconds()).padStart(2, '0'); // –°–µ–∫—É–Ω–¥–∏ –∑ –ª—ñ–¥–∏—Ä—É—é—á–∏–º –Ω—É–ª–µ–º

    return `${year}-${month}-${day}(${hours}:${minutes}:${seconds})`;
}



module.exports = { getLastMessage, genT, formatTimestamp };